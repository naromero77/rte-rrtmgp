# build and run tests for Cray Fortran OpenMP compiler and run on Cori-GPU
#
# The CI script assume that an Anaconda environment under regular user
# account is availalble under the default Python module which contains
# Anaconda as well as having the following environment pre-created.
# environment should be already installed:
# module load python
# conda create --yes -n e3sm python=3.7
# source activate e3sm
# conda install --yes urllib3 netcdf4 xarray dask
#
# Scratch directory name is:
# /global/cscratch1/ecp-gitlab/$username

# Common step for each pipeline.
before_script:
  - echo "Setting up RTE-RRTMGP environment variables"
  - echo "CI_PROJECT_DIR =" ${CI_PROJECT_DIR}
  - export RRTMGP_ROOT=$PWD
  - export RRTMGP_DIR=$PWD/build
  - export RRTMGP_BUILD=${RRTMGP_ROOT}/build
  - echo "Loading conda environment"
  - module load python
  - source activate e3sm
  - echo "Loading modules"
  - module load cgpu
  - module swap PrgEnv-{intel,cray}
  - module swap craype-{${CRAY_CPU_TARGET},x86-skylake}
  - module swap cce cce/10.0.3
  - module load cuda
  - export CRAY_ACCEL_TARGET=nvidia70
  - module list
  - echo "Setting environmenta variables for NETCDF"
  - export NCHOME=`spack location -i netcdf-c~mpi%cce@10.0.3`
  - export NFHOME=`spack location -i netcdf-fortran%cce@10.0.3`
  - export LD_LIBRARY_PATH=${NFHOME}/lib:${NCHOME}/lib:${LD_LIBRARY_PATH}
  - echo $LD_LIBRARY_PATH
  - ulimit -c unlimited
  - ulimit -s unlimited
  - unset CRAY_ACC_DEBUG

after_script:
  - echo "Transmit CI Results to GitHub"
  - echo "To be completed"

stages:
  - build_serial
  - build_omp

# run using the Cori runner
.ci-runner:
  tags:
    - cori

# build using Cray Compiler for sequential code
build-test-cori-gpu:
  rules:
    - if: '$CI_COMMIT_BRANCH == "omp-45-cray"'

  extends: .ci-runner

  stage: build_serial

  script:
    - srun nvidia-smi
    - echo "Cori GPU (serial)"
    - echo "Set compiler specific variables"
    - unset RTE_KERNELS
    - export FC=ftn
    - export FCFLAGS="-hnoacc -hnoomp -O0"
    - echo "Running build"
    - echo "Building RTE and RRTMGP libraries"
    - cd ${RRTMGP_ROOT}/build
    - rm -f Makefile.conf
    - make clean
    - make
    - echo "Building clear sky example"
    - cd ${RRTMGP_ROOT}/examples/rfmip-clear-sky
    - make clean
    - make
    - echo "Building all sky example"
    - cd ${RRTMGP_ROOT}/examples/all-sky
    - make clean
    - make
    - echo "Running clear sky test"
    - cd ${RRTMGP_ROOT}/examples/rfmip-clear-sky
    - python ./stage_files.py
    - cp ${RRTMGP_ROOT}/rrtmgp/data/*.nc .
    - echo "Listing files in clear sky directory"
    - ls
    - srun -n 1 ./rrtmgp_rfmip_lw 1800 ./multiple_input4MIPs_radiation_RFMIP_UColorado-RFMIP-1-2_none.nc ./rrtmgp-data-lw-g256-2018-12-04.nc
    - srun -n 1 ./rrtmgp_rfmip_sw 1800 ./multiple_input4MIPs_radiation_RFMIP_UColorado-RFMIP-1-2_none.nc ./rrtmgp-data-sw-g224-2018-12-04.nc
    - python ./compare-to-reference.py --fail=7.e-4
    - echo "Running all sky test"
    - cd ${RRTMGP_ROOT}/examples/all-sky
    - cp ${RRTMGP_ROOT}/extensions/cloud_optics/*.nc .
    - cp garand-atmos-1.nc rrtmgp-allsky.nc
    - srun -n 1 ./rrtmgp_allsky ./rrtmgp-allsky.nc ./rrtmgp-data-lw-g256-2018-12-04.nc ./rrtmgp-cloud-optics-coeffs-lw.nc 128
    - srun -n 1 ./rrtmgp_allsky ./rrtmgp-allsky.nc ./rrtmgp-data-sw-g224-2018-12-04.nc ./rrtmgp-cloud-optics-coeffs-sw.nc 128
    - python ./compare-to-reference.py

  variables:
    SCHEDULER_PARAMETERS: "-M escori -N 1 -C gpu -t 30 -c 20 -G 2 -A m3312"

# build using Cray Compiler for OpenMP offload flag
build-test-cori-gpu-offload:
  rules:
    - if: '$CI_COMMIT_BRANCH == "omp-45-cray"'

  extends: .ci-runner

  stage: build_omp

  script:
    - echo "Cori GPU (OpenMP offload to GPU)"
    - echo "Set compiler specific variables"
    - export RTE_KERNELS=openacc
    - export FC=ftn
    - export FCFLAGS="-hnoacc -homp -O0"
    - echo "Running build"
    - echo "Building RTE and RRTMGP libraries"
    - cd ${RRTMGP_ROOT}/build
    - rm -f Makefile.conf
    - make clean
    - make
    - echo "Building clear sky example"
    - cd ${RRTMGP_ROOT}/examples/rfmip-clear-sky
    - make clean
    - make
    - echo "Building all sky example"
    - cd ${RRTMGP_ROOT}/examples/all-sky
    - make clean
    - make
    - echo "Running clear sky test"
    - cd ${RRTMGP_ROOT}/examples/rfmip-clear-sky
    - python ./stage_files.py
    - chmod u+x ./run-rfmip-examples.py
    - chmod u+x ./compare-to-reference.py
    - srun ./run-rfmip-examples.py
    - ./compare-to-reference.py --fail=7.e-4
    - echo "Running all sky test"
    - cd ${RRTMGP_ROOT}/examples/all-sky
    - chmod u+x ./run-allsky-example.py
    - chmod u+x ./compare-to-reference.py
    - srun ./run-allsky-example.py
    - ./compare-to-reference.py

  variables:
    SCHEDULER_PARAMETERS: "-M escori -N 1 --gres=gpu:1 -C gpu -t 00:30:00"
